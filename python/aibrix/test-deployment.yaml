apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    model.aibrix.ai/name: test-model
    model.aibrix.ai/port: '8000'
  name: test-model
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      model.aibrix.ai/name: test-model
  template:
    metadata:
      labels:
        model.aibrix.ai/name: test-model
    spec:
      containers:
      - command:
        - python3
        - -m
        - vllm.entrypoints.openai.api_server
        - --host
        - 0.0.0.0
        - --port
        - '8000'
        - --uvicorn-log-level
        - warning
        - --model
        - nginx:alpine
        - --served-model-name
        - test-model
        - --max-model-len
        - '12288'
        image: vllm/vllm-openai:v0.7.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8000
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        name: vllm-openai
        ports:
        - containerPort: 8000
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8000
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            nvidia.com/gpu: '1'
          requests:
            nvidia.com/gpu: '1'
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: '8080'
    prometheus.io/scrape: 'true'
  labels:
    model.aibrix.ai/name: test-model
    prometheus-discovery: 'true'
  name: test-model
  namespace: default
spec:
  ports:
  - name: serve
    port: 8000
    protocol: TCP
    targetPort: 8000
  selector:
    model.aibrix.ai/name: test-model
  type: ClusterIP
